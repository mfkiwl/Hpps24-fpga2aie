{
    "ModuleName": "i0_entropy_vect",
    "SourceFileName": "/home/users/francesco.santambrogio/Downloads/Hpps24-fpga2aie/aie/src/entropy_vect.cpp",
    "StructTypes": [
        {
            "Name": "class.aie::detail::vector",
            "Size": 32
        },
        {
            "Name": "struct.v8float",
            "Size": 32
        },
        {
            "Name": "struct.ipd.custom_type.v32int8.v32int8",
            "Size": 32
        },
        {
            "Name": "class.anon",
            "Size": 1
        },
        {
            "Name": "class.anon.4",
            "Size": 1
        },
        {
            "Name": "struct.aie::detail::utils::unroll_context",
            "Size": 1
        },
        {
            "Name": "class.anon.8",
            "Size": 1
        },
        {
            "Name": "struct.input_stream",
            "Size": 4
        },
        {
            "Name": "union.anon",
            "Size": 4
        },
        {
            "Name": "struct.output_stream",
            "Size": 4
        },
        {
            "Name": "union.anon.0",
            "Size": 4
        },
        {
            "Name": "class.aie::detail::vector.3",
            "Size": 32
        },
        {
            "Name": "struct.v8int32",
            "Size": 32
        },
        {
            "Name": "struct.input_stream.1",
            "Size": 4
        },
        {
            "Name": "union.anon.2",
            "Size": 4
        },
        {
            "Name": "class.anon.6",
            "Size": 28
        },
        {
            "Name": "struct.ipd.custom_type.v8acc48.v8acc48",
            "Size": 48
        },
        {
            "Name": "struct.ipd.custom_type.uint1_t.uint1_t",
            "Size": 1
        },
        {
            "Name": "struct.ipd.custom_type.uint3_t.uint3_t",
            "Size": 1
        },
        {
            "Name": "struct.me_primitive::chessout_v8int32_lsrs_v8acc48___uchar_uint1_t_uint1_t_uint1_t_uint3_t_uint1_t",
            "Size": 33
        },
        {
            "Name": "struct.ipd.custom_type.uint2_t.uint2_t",
            "Size": 1
        },
        {
            "Name": "struct.me_primitive::chessout_v8acc48_ups_w2a_sw_v8int32___uchar_uint1_t_uint2_t_uint1_t_uint1_t",
            "Size": 49
        },
        {
            "Name": "class.aie::detail::vector.7",
            "Size": 64
        },
        {
            "Name": "struct.v16int32",
            "Size": 64
        },
        {
            "Name": "struct.ipd.custom_type.v64int8.v64int8",
            "Size": 64
        },
        {
            "Name": "class.aie::detail::vector_elem_const_ref",
            "Size": 8
        },
        {
            "Name": "class.aie::detail::vector.10",
            "Size": 64
        },
        {
            "Name": "struct.v8cint32",
            "Size": 64
        },
        {
            "Name": "struct.v4cint32",
            "Size": 32
        },
        {
            "Name": "class.aie::detail::vector_elem_const_ref.11",
            "Size": 8
        },
        {
            "Name": "class.aie::detail::vector_elem_ref",
            "Size": 8
        },
        {
            "Name": "class.aie::detail::vector.12",
            "Size": 16
        },
        {
            "Name": "struct.v8int16",
            "Size": 16
        },
        {
            "Name": "struct.ipd.custom_type.v16int8.v16int8",
            "Size": 16
        },
        {
            "Name": "class.aie::detail::vector.15",
            "Size": 16
        },
        {
            "Name": "struct.v4float",
            "Size": 16
        },
        {
            "Name": "struct.input_stream.13",
            "Size": 4
        },
        {
            "Name": "union.anon.14",
            "Size": 4
        },
        {
            "Name": "class.aie::detail::vector.16",
            "Size": 64
        },
        {
            "Name": "struct.v16float",
            "Size": 64
        },
        {
            "Name": "struct.v4int32",
            "Size": 16
        },
        {
            "Name": "struct.me_primitive::chessout_v4int32_stream_read128___PWSS_rsrc1__sint_uint1_t___sint",
            "Size": 20
        },
        {
            "Name": "struct.me_primitive::chessout_v4int32_stream_read128___PWSS_rsrc2__sint_uint1_t___sint",
            "Size": 20
        },
        {
            "Name": "struct.me_primitive::chessout_v4int32_stream_read128___PWSSMEM__sint_uint1_t___sint",
            "Size": 20
        },
        {
            "Name": "struct.output_stream.17",
            "Size": 4
        },
        {
            "Name": "union.anon.18",
            "Size": 4
        },
        {
            "Name": "class.aie::detail::vector.19",
            "Size": 32
        },
        {
            "Name": "struct.v2cint32",
            "Size": 16
        },
        {
            "Name": "struct.me_primitive::chessout___sint_stream_read___PSS_rsrc1__sint_uint1_t___sint",
            "Size": 8
        },
        {
            "Name": "struct.me_primitive::chessout___sint_stream_read___PSS_rsrc2__sint_uint1_t___sint",
            "Size": 8
        },
        {
            "Name": "struct.me_primitive::chessout___sint_stream_read___PSSMEM__sint_uint1_t___sint",
            "Size": 8
        },
        {
            "Name": "class.aie::detail::vector_elem_const_ref.20",
            "Size": 8
        },
        {
            "Name": "class.aie::detail::vector.21",
            "Size": 16
        },
        {
            "Name": "vector_elem_const_ref<float, 16>",
            "Size": 8
        },
        {
            "Name": "vector<cint32, 4>",
            "Size": 32
        },
        {
            "Name": "vector<float, 16>",
            "Size": 64
        },
        {
            "Name": "vector<short, 8>",
            "Size": 16
        },
        {
            "Name": "vector_elem_const_ref<int, 8>",
            "Size": 8
        },
        {
            "Name": "vector<float, 4>",
            "Size": 16
        },
        {
            "Name": "vector_elem_ref<int, 8>",
            "Size": 8
        },
        {
            "Name": "vector<cint32, 8>",
            "Size": 64
        },
        {
            "Name": "vector<int, 4>",
            "Size": 16
        },
        {
            "Name": "vector<int, 16>",
            "Size": 64
        },
        {
            "Name": "vector<int, 8>",
            "Size": 32
        },
        {
            "Name": "vector_elem_const_ref<int, 16>",
            "Size": 8
        },
        {
            "Name": "vector<float, 8>",
            "Size": 32
        }
    ],
    "Globals": [
        {
            "Name": "c",
            "MangledName": "_ZL1c",
            "Size": 224,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail15shift_bits_implIiLj32ELj8EE3runERKNS0_6vectorIiLj8EEEjj.srs_op",
            "Size": 1,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail15shift_bits_implIiLj32ELj8EE3runERKNS0_6vectorIiLj8EEEjj.ups_op",
            "Size": 1,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail5utils17unroll_for_helperIjLj0ELj1ELj0ELj1EE7executeIZNS0_15shift_bits_implIiLj32ELj8EE3runERKNS0_6vectorIiLj8EEEjjEUlT_E_EEvOSB_.ctx",
            "Size": 1,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail17add_sub_bits_implILj32EiLj8ELNS0_15AddSubOperationE1EE3runILj16EEENS0_6vectorIiLj8EEERKS6_NS0_21vector_elem_const_refIiXT_EEE.op",
            "Size": 1,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ss0",
            "MangledName": "_ZN12me_primitive3ss0E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ss1",
            "MangledName": "_ZN12me_primitive3ss1E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ms0",
            "MangledName": "_ZN12me_primitive3ms0E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ms1",
            "MangledName": "_ZN12me_primitive3ms1E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "ZERO",
            "Size": 32,
            "SoftFloat": false
        }
    ],
    "UsesCmathStaticVars": false,
    "Functions": [
        {
            "FunctionName": "aie_dm_resource_remove<aie::detail::vector<int, 8u> >::type aie::sub<aie::detail::vector<int, 8u>, int>(aie::detail::vector<int, 8u> const&, int)",
            "StackSize": 1993,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int32::v8int32(chessllvmInternal, v32int8)",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "log_kernel_function(input_stream<float>*, output_stream<float>*)",
            "StackSize": 3225,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::vector()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> readincr_v<8u, (aie_stream_resource_in)0, float>(input_stream<float>*)",
            "StackSize": 1488,
            "SoftFloat": false
        },
        {
            "FunctionName": "log2v(aie::detail::vector<float, 8u>)",
            "StackSize": 3085,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0, float, 8u>(output_stream<float>*, aie::detail::vector<float, 8u> const&)",
            "StackSize": 952,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 8u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::adf::stream_in_helper<8u, float, (aie_stream_resource_in)0>::readincr(input_stream<float>*)",
            "StackSize": 1452,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::operator v8float() const",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8int32(v8float)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::vector(v8int32)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie_dm_resource_remove<aie::detail::vector<int, 8u> >::type aie::downshift<aie::detail::vector<int, 8u> >(aie::detail::vector<int, 8u> const&, unsigned int)",
            "StackSize": 561,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::to_float<int, 8u>(aie::detail::vector<int, 8u> const&, int)",
            "StackSize": 388,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie_dm_resource_remove<aie::detail::vector<int, 8u> >::type aie::bit_and<int, aie::detail::vector<int, 8u> >(int, aie::detail::vector<int, 8u> const&)",
            "StackSize": 308,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie_dm_resource_remove<aie::detail::vector<int, 8u> >::type aie::bit_or<int, aie::detail::vector<int, 8u> >(int, aie::detail::vector<int, 8u> const&)",
            "StackSize": 308,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::operator v8int32() const",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8float(v8int32)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::vector(v8float)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpmac(v8float, v8float, v8float)",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpadd(v8float, v8float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "entropy_vec_kernel_function(input_stream<int>*, output_stream<float>*)",
            "StackSize": 3677,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::adf::stream_out_helper<8u, float, (aie_stream_resource_out)0>::writeincr(output_stream<float>*, aie::detail::vector<float, 8u>)",
            "StackSize": 944,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::elementary_vector_bits<(aie::detail::ElementaryOp)7, 32u, float, int, 8u>::run(aie::detail::vector<int, 8u> const&, int)",
            "StackSize": 348,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::adf::stream_in_helper<8u, int, (aie_stream_resource_in)0>::readincr(input_stream<int>*)",
            "StackSize": 1452,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> aie::zeros<float, 8u>()",
            "StackSize": 412,
            "SoftFloat": false
        },
        {
            "FunctionName": "int readincr<(aie_stream_resource_in)0, int>(input_stream<int>*)",
            "StackSize": 71,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<aie::operand_base_type<aie::detail::utils::remove_all<float>::type>::type, 8u> aie::broadcast<float, 8u>(float)",
            "StackSize": 1308,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u> readincr_v<8u, (aie_stream_resource_in)0, int>(input_stream<int>*)",
            "StackSize": 1488,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpmul(v8float, v8float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> aie::detail::zeros<float, 8u>()",
            "StackSize": 380,
            "SoftFloat": false
        },
        {
            "FunctionName": "int stream_utils::aie_stream_get_ss<int, int>(input_stream<int>*)",
            "StackSize": 59,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::broadcast_bits<32u, float, 8u>::run(float const&)",
            "StackSize": 1272,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "entropy_vec_pass_kernel_function(input_stream<int>*, input_stream<float>*, output_stream<float>*)",
            "StackSize": 3841,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)",
            "StackSize": 473,
            "SoftFloat": false
        },
        {
            "FunctionName": "marginal_entropy_kernel_function(input_stream<int>*, output_stream<float>*)",
            "StackSize": 3773,
            "SoftFloat": true
        },
        {
            "FunctionName": "sub16(v16int32, int, unsigned int, unsigned int, int, unsigned int, unsigned int)",
            "StackSize": 152,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write128(int __protect_access AS23*, v4int32, uint1_t, v4int32)",
            "StackSize": 22,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_w(int, v8int32)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpneg(v8float)",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::elementary_vector_bits_impl<(aie::detail::ElementaryOp)7, 32u, float, int, 8u>::run(aie::detail::vector<int, 8u> const&, int)",
            "StackSize": 308,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u> aie::detail::vector<int, 8u>::grow_extract<8u>(unsigned int) const",
            "StackSize": 52,
            "SoftFloat": false
        },
        {
            "FunctionName": "fix2float(v8int32, int)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>& aie::detail::vector<float, 8u>::insert<8u>(unsigned int, aie::detail::vector<float, 8u> const&)",
            "StackSize": 16,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u> aie::detail::vector<int, 8u>::extract<8u>(unsigned int) const",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "shft_elem(v16int32, int)",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::shift_bits<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)",
            "StackSize": 517,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::add_sub_bits<32u, int, 8u, (aie::detail::AddSubOperation)1>::run(aie::detail::vector<int, 8u> const&, int const&)",
            "StackSize": 1945,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::bit_bits<32u, int, 8u, (aie::detail::BitOp)0>::run(int const&, aie::detail::vector<int, 8u> const&)",
            "StackSize": 260,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::bit_bits<32u, int, 8u, (aie::detail::BitOp)2>::run(int const&, aie::detail::vector<int, 8u> const&)",
            "StackSize": 260,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8float::v8float(chessllvmInternal, v32int8)",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::vector()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_times<1u, aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}>(aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}&&)",
            "StackSize": 359,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<int, 8u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8int32()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}&& std::__2::forward<aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}>(std::__2::remove_reference<aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}>::type&)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_for<unsigned int, 0u, 1u, 1u, aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}>(aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}&&)",
            "StackSize": 355,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_for_helper<unsigned int, 0u, 1u, 0u, 1u>::execute<aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}>(aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}&&)",
            "StackSize": 351,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}::operator()<aie::detail::utils::unroll_context<unsigned int, 0u, 1u, 0u> >(aie::detail::utils::unroll_context<unsigned int, 0u, 1u, 0u>) const",
            "StackSize": 341,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_for_helper<unsigned int, 0u, 1u, 1u, 1u>::execute<aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}>(aie::detail::shift_bits_impl<int, 32u, 8u>::run(aie::detail::vector<int, 8u> const&, unsigned int, unsigned int)::{lambda(auto:1)#1}&&)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::utils::unroll_context<unsigned int, 0u, 1u, 0u>::operator unsigned int() const",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>& aie::detail::vector<float, 8u>::insert<4u>(unsigned int, aie::detail::vector<float, 4u> const&)",
            "StackSize": 1316,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>& aie::detail::vector<int, 8u>::insert<8u>(unsigned int, aie::detail::vector<int, 8u>::native_type)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "sub16(v16int32, int, unsigned int, unsigned int, v16int32, int, unsigned int, unsigned int)",
            "StackSize": 216,
            "SoftFloat": false
        },
        {
            "FunctionName": "lsrs(v8acc48, int)",
            "StackSize": 180,
            "SoftFloat": false
        },
        {
            "FunctionName": "ups(v8int32, int)",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::utils::unroll_context<unsigned int, 0u, 1u, 0u>::current() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>& aie::detail::vector<int, 8u>::insert<8u>(unsigned int, aie::detail::vector<int, 8u> const&)",
            "StackSize": 16,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::shft_nrm(int)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint1_t::uint1_t(int)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write128(int __protect_access AS24*, v4int32, uint1_t, v4int32)",
            "StackSize": 22,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_sat_impl()",
            "StackSize": 0,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_sym_sat_impl()",
            "StackSize": 0,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_rnd_impl()",
            "StackSize": 0,
            "SoftFloat": false
        },
        {
            "FunctionName": "set_srs_sat_impl(uint1_t)",
            "StackSize": 6,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::bit_bits_impl<32u, int, 8u, (aie::detail::BitOp)2>::run(int, aie::detail::vector<int, 8u> const&)",
            "StackSize": 220,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint1_t const& chess_dont_warn_dead<uint1_t>(uint1_t const&)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint2_t::uint2_t(int)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "set_ups_sat_impl(uint1_t)",
            "StackSize": 6,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::vector()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::add_sub_bits_impl<32u, int, 8u, (aie::detail::AddSubOperation)1>::run(aie::detail::vector<int, 8u> const&, int const&)",
            "StackSize": 1905,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u>::vector<>(int)",
            "StackSize": 220,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u>::elem_const_ref(unsigned int) const",
            "StackSize": 28,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u> aie::detail::add_sub_bits_impl<32u, int, 8u, (aie::detail::AddSubOperation)1>::run<16u>(aie::detail::vector<int, 8u> const&, aie::detail::vector_elem_const_ref<int, 16u>)",
            "StackSize": 1729,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<int, 16u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::vector<int, 16u>::init_from_values_simple<v16int32, , int>(v16int32&, int const&)",
            "StackSize": 208,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u>::vector()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "bool aie::detail::utils::is_same_object<aie::detail::vector<int, 16u>, aie::detail::vector<int, 8u> >(aie::detail::vector<int, 16u> const&, aie::detail::vector<int, 8u> const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u> aie::detail::vector<int, 8u>::grow<16u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u>::vector(v16int32)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u> aie::detail::vector<int, 16u>::grow<16u>(unsigned int) const",
            "StackSize": 272,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u> aie::detail::vector<int, 16u>::extract<8u>(unsigned int) const",
            "StackSize": 1068,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_elem_const_ref<int, 16u>::vector_elem_const_ref(aie::detail::vector<int, 16u> const&, unsigned int)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v16int32()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u>::operator v16int32() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::vector<>(float)",
            "StackSize": 220,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::operator[](unsigned int) const",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::broadcast_bits_impl<32u, float, 16u>::run<16u>(aie::detail::vector_elem_const_ref<float, 16u>)",
            "StackSize": 728,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_w(v16float, int)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_w(v16int32, int)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<int, 16u>::cast_to<cint32>() const",
            "StackSize": 472,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::operator v8cint32() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "shuffle8(v8cint32, int, unsigned int)",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::vector(v8cint32)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_w(v8cint32, int)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<int, 8u>::type aie::detail::vector_cast_helper<int, 8u, v4cint32>(v4cint32&&)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::operator[](unsigned int)",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_elem_ref<int, 8u>::operator=(int const&)",
            "StackSize": 124,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 8u>::type aie::detail::vector_cast_helper<cint32, 8u, v16int32 const&>(v16int32 const&)",
            "StackSize": 268,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8int32(v4cint32)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 8u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8cint32(v16int32)",
            "StackSize": 200,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8cint32()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8cint32::v8cint32(chessllvmInternal, v64int8)",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::bit_bits_impl<32u, int, 8u, (aie::detail::BitOp)0>::run(int, aie::detail::vector<int, 8u> const&)",
            "StackSize": 220,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::operator[](unsigned int) const",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::operator&<int, aie::detail::vector_elem_const_ref<int, 8u> >(int, aie::detail::vector_elem_const_ref<int, 8u>)",
            "StackSize": 60,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::broadcast_bits_impl<32u, float, 16u>::run(float const&)",
            "StackSize": 1064,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> aie::detail::vector<float, 16u>::extract<8u>(unsigned int) const",
            "StackSize": 1068,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_elem_const_ref<int, 8u>::get() const",
            "StackSize": 48,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::elem_const_ref(unsigned int) const",
            "StackSize": 28,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::elem_ref(unsigned int)",
            "StackSize": 28,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::set(int, unsigned int)",
            "StackSize": 116,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>::get(unsigned int) const",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_elem(v8int32, unsigned int)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_elem_const_ref<int, 8u>::vector_elem_const_ref(aie::detail::vector<int, 8u> const&, unsigned int)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_elem_ref<int, 8u>::vector_elem_ref(aie::detail::vector<int, 8u>&, unsigned int)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "upd_elem(v8int32, unsigned int, int)",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::operator|<int, aie::detail::vector_elem_const_ref<int, 8u> >(int, aie::detail::vector_elem_const_ref<int, 8u>)",
            "StackSize": 60,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8float(v4cint32)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8float()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int16 readincr_v8<(aie_stream_resource_in)0>(input_stream<short>*)",
            "StackSize": 143,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<short, 8u>::vector(v8int16)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::vector_cast<float, aie::detail::vector<short, 8u> >(aie::detail::vector<short, 8u> const&)",
            "StackSize": 176,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int16 stream_utils::aie_stream_get_wss<short>(input_stream<short>*)",
            "StackSize": 123,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::operator v4float() const",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "upd_v(v8float, int, v4float)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::vector<float, 4u>::grow<16u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<float, 16u>::cast_to<cint32>() const",
            "StackSize": 472,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::vector<float, 8u>::grow<16u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "select8(unsigned int, v8cint32, int, unsigned int, v8cint32, int, unsigned int)",
            "StackSize": 212,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 8u>::type aie::detail::vector_cast_helper<float, 8u, v4cint32>(v4cint32&&)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector_cast<float, short, 8u>(aie::detail::vector<short, 8u> const&)",
            "StackSize": 156,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_wss(int)",
            "StackSize": 103,
            "SoftFloat": false
        },
        {
            "FunctionName": "getl_wss(int)",
            "StackSize": 67,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8int16(v4int32)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int16::v8int16(chessllvmInternal, v16int8)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::vector()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_v(int, v4float)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 8u>::type aie::detail::vector_cast_helper<cint32, 8u, v16float const&>(v16float const&)",
            "StackSize": 268,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_w(int, v8float)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 16u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v16float()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8cint32(v16float)",
            "StackSize": 200,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<short, 8u>::cast_to<float>() const",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::vector()",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 4u>::type aie::detail::vector_cast_helper<float, 4u, v8int16 const&>(v8int16 const&)",
            "StackSize": 76,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 4u>::undef()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4float(v8int16)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v4float()",
            "StackSize": 16,
            "SoftFloat": false
        },
        {
            "FunctionName": "v4float::v4float(chessllvmInternal, v16int8)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u> aie::detail::vector<float, 8u>::extract<4u>(unsigned int) const",
            "StackSize": 872,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0>(output_stream<float>*, v4float, bool)",
            "StackSize": 180,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8int16(v4float)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0>(output_stream<short>*, v8int16, bool)",
            "StackSize": 143,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_v(v8float, int)",
            "StackSize": 52,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<float, 8u>::cast_to<cint32>() const",
            "StackSize": 248,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u> aie::detail::vector<cint32, 4u>::grow<8u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_v(v8cint32, int)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 4u>::type aie::detail::vector_cast_helper<float, 4u, v2cint32>(v2cint32&&)",
            "StackSize": 76,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::vector(v4float)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "void stream_utils::aie_stream_put_wms<short>(output_stream<short>*, v8int16, bool&)",
            "StackSize": 122,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_wms(int, v8int16, int)",
            "StackSize": 98,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4int32(v8int16)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_wms(int, v4int32, int)",
            "StackSize": 58,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write128(int __protect_access AS12*, v4int32, uint1_t, v4int32)",
            "StackSize": 22,
            "SoftFloat": false
        },
        {
            "FunctionName": "v4int32::v4int32(chessllvmInternal, v16int8)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 4u>::vector()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 4u>::type aie::detail::vector_cast_helper<cint32, 4u, v8float const&>(v8float const&)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_w(int, v4cint32)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4float(v2cint32)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 4u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4cint32(v8float)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v4cint32()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "v4cint32::v4cint32(chessllvmInternal, v32int8)",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector_cast<float, int, 8u>(aie::detail::vector<int, 8u> const&)",
            "StackSize": 284,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<int, 8u>::cast_to<float>() const",
            "StackSize": 248,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 8u>::type aie::detail::vector_cast_helper<float, 8u, v8int32 const&>(v8int32 const&)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_ss(int)",
            "StackSize": 55,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::broadcast_bits_impl<32u, float, 8u>::run(float const&)",
            "StackSize": 1236,
            "SoftFloat": true
        },
        {
            "FunctionName": "void aie::detail::vector<float, 16u>::init_from_values_simple<v16float, , float>(v16float&, float const&)",
            "StackSize": 208,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::vector<float, 16u>::grow<16u>(unsigned int) const",
            "StackSize": 272,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::operator v16float() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpshuffle16(v16float, int, unsigned int, unsigned int)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::vector(v16float)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::vector<float, 16u>::extract<16u>(unsigned int) const",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::elem_const_ref(unsigned int) const",
            "StackSize": 28,
            "SoftFloat": false
        },
        {
            "FunctionName": "shft_elem(v16float, float)",
            "StackSize": 132,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_elem_const_ref<float, 16u>::vector_elem_const_ref(aie::detail::vector<float, 16u> const&, unsigned int)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::vector_cast<int, aie::detail::vector<short, 8u> >(aie::detail::vector<short, 8u> const&)",
            "StackSize": 176,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 8u>& aie::detail::vector<int, 8u>::insert<4u>(unsigned int, aie::detail::vector<int, 4u> const&)",
            "StackSize": 1316,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 4u>::operator v4int32() const",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "upd_v(v8int32, int, v4int32)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 16u> aie::detail::vector<int, 4u>::grow<16u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector_cast<int, short, 8u>(aie::detail::vector<short, 8u> const&)",
            "StackSize": 156,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 4u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_v(int, v4int32)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<short, 8u>::cast_to<int>() const",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<int, 4u>::vector()",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<int, 4u>::type aie::detail::vector_cast_helper<int, 4u, v8int16 const&>(v8int16 const&)",
            "StackSize": 76,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<int, 4u>::undef()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v4int32()",
            "StackSize": 16,
            "SoftFloat": false
        }
    ]
}