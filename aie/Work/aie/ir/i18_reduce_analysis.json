{
    "ModuleName": "i18_reduce",
    "SourceFileName": "/home/users/francesco.santambrogio/Downloads/Hpps24-fpga2aie/aie/src/reduce.cpp",
    "StructTypes": [
        {
            "Name": "struct.input_stream",
            "Size": 4
        },
        {
            "Name": "union.anon",
            "Size": 4
        },
        {
            "Name": "struct.output_stream",
            "Size": 4
        },
        {
            "Name": "union.anon.0",
            "Size": 4
        },
        {
            "Name": "class.aie::detail::vector",
            "Size": 32
        },
        {
            "Name": "struct.v8float",
            "Size": 32
        },
        {
            "Name": "struct.ipd.custom_type.v32int8.v32int8",
            "Size": 32
        },
        {
            "Name": "class.aie::detail::vector.1",
            "Size": 16
        },
        {
            "Name": "struct.v8int16",
            "Size": 16
        },
        {
            "Name": "struct.ipd.custom_type.v16int8.v16int8",
            "Size": 16
        },
        {
            "Name": "class.aie::detail::vector.4",
            "Size": 16
        },
        {
            "Name": "struct.v4float",
            "Size": 16
        },
        {
            "Name": "struct.input_stream.2",
            "Size": 4
        },
        {
            "Name": "union.anon.3",
            "Size": 4
        },
        {
            "Name": "class.aie::detail::vector.5",
            "Size": 64
        },
        {
            "Name": "struct.v8cint32",
            "Size": 64
        },
        {
            "Name": "struct.ipd.custom_type.v64int8.v64int8",
            "Size": 64
        },
        {
            "Name": "class.aie::detail::vector.6",
            "Size": 64
        },
        {
            "Name": "struct.v16float",
            "Size": 64
        },
        {
            "Name": "struct.v4cint32",
            "Size": 32
        },
        {
            "Name": "struct.v4int32",
            "Size": 16
        },
        {
            "Name": "struct.ipd.custom_type.uint1_t.uint1_t",
            "Size": 1
        },
        {
            "Name": "struct.me_primitive::chessout_v4int32_stream_read128___PWSS_rsrc1__sint_uint1_t___sint",
            "Size": 20
        },
        {
            "Name": "struct.me_primitive::chessout_v4int32_stream_read128___PWSS_rsrc2__sint_uint1_t___sint",
            "Size": 20
        },
        {
            "Name": "struct.me_primitive::chessout_v4int32_stream_read128___PWSSMEM__sint_uint1_t___sint",
            "Size": 20
        },
        {
            "Name": "struct.output_stream.7",
            "Size": 4
        },
        {
            "Name": "union.anon.8",
            "Size": 4
        },
        {
            "Name": "class.aie::detail::vector.9",
            "Size": 32
        },
        {
            "Name": "struct.v2cint32",
            "Size": 16
        },
        {
            "Name": "vector<cint32, 4>",
            "Size": 32
        },
        {
            "Name": "vector<float, 16>",
            "Size": 64
        },
        {
            "Name": "vector<cint32, 8>",
            "Size": 64
        },
        {
            "Name": "vector<float, 4>",
            "Size": 16
        },
        {
            "Name": "vector<short, 8>",
            "Size": 16
        },
        {
            "Name": "vector<float, 8>",
            "Size": 32
        }
    ],
    "Globals": [
        {
            "Name": "me_primitive::ss0",
            "MangledName": "_ZN12me_primitive3ss0E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ss1",
            "MangledName": "_ZN12me_primitive3ss1E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ms0",
            "MangledName": "_ZN12me_primitive3ms0E",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::ms1",
            "MangledName": "_ZN12me_primitive3ms1E",
            "Size": 4,
            "SoftFloat": false
        }
    ],
    "UsesCmathStaticVars": false,
    "Functions": [
        {
            "FunctionName": "reduce_vec_kernel_function(input_stream<float>*, input_stream<float>*, output_stream<float>*)",
            "StackSize": 1884,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint1_t::uint1_t(int)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::vector()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> readincr_v<8u, (aie_stream_resource_in)0, float>(input_stream<float>*)",
            "StackSize": 1488,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::operator v8float() const",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpadd(v8float, v8float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::vector(v8float)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0, float, 8u>(output_stream<float>*, aie::detail::vector<float, 8u> const&)",
            "StackSize": 952,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 8u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::adf::stream_in_helper<8u, float, (aie_stream_resource_in)0>::readincr(input_stream<float>*)",
            "StackSize": 1452,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "reduce_kernel_function(input_stream<float>*, input_stream<float>*, output_stream<float>*)",
            "StackSize": 1888,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::adf::stream_out_helper<8u, float, (aie_stream_resource_out)0>::writeincr(output_stream<float>*, aie::detail::vector<float, 8u>)",
            "StackSize": 944,
            "SoftFloat": false
        },
        {
            "FunctionName": "select8(unsigned int, v8cint32, int, unsigned int, v8cint32, int, unsigned int)",
            "StackSize": 212,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::vector(v8cint32)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::value_type aie::reduce_add<aie::detail::vector<float, 8u> >(aie::detail::vector<float, 8u> const&)",
            "StackSize": 1160,
            "SoftFloat": true
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0, float>(output_stream<float>*, std::__2::type_identity<float>::type, bool)",
            "StackSize": 56,
            "SoftFloat": true
        },
        {
            "FunctionName": "auto aie::detail::vector_cast<float, short, 8u>(aie::detail::vector<short, 8u> const&)",
            "StackSize": 156,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::add_reduce_bits<32u, float, 8u>::run(aie::detail::vector<float, 8u> const&)",
            "StackSize": 1152,
            "SoftFloat": true
        },
        {
            "FunctionName": "as_int32(float)",
            "StackSize": 4,
            "SoftFloat": true
        },
        {
            "FunctionName": "void stream_utils::aie_stream_put_ms<float, float>(output_stream<float>*, int, bool)",
            "StackSize": 43,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8float()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int16 readincr_v8<(aie_stream_resource_in)0>(input_stream<short>*)",
            "StackSize": 143,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<short, 8u>::vector(v8int16)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::vector_cast<float, aie::detail::vector<short, 8u> >(aie::detail::vector<short, 8u> const&)",
            "StackSize": 176,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>& aie::detail::vector<float, 8u>::insert<4u>(unsigned int, aie::detail::vector<float, 4u> const&)",
            "StackSize": 1316,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int16 stream_utils::aie_stream_get_wss<short>(input_stream<short>*)",
            "StackSize": 123,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 8u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::operator v4float() const",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "upd_v(v8float, int, v4float)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::vector()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::vector<float, 4u>::grow<16u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<float, 16u>::cast_to<cint32>() const",
            "StackSize": 472,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u> aie::detail::vector<float, 8u>::grow<16u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::operator v8cint32() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u> aie::detail::vector<float, 8u>::extract<4u>(unsigned int) const",
            "StackSize": 872,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_w(v8cint32, int)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 8u>::type aie::detail::vector_cast_helper<float, 8u, v4cint32>(v4cint32&&)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8int16(v4float)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0>(output_stream<short>*, v8int16, bool)",
            "StackSize": 143,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8float::v8float(chessllvmInternal, v32int8)",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_wss(int)",
            "StackSize": 103,
            "SoftFloat": false
        },
        {
            "FunctionName": "getl_wss(int)",
            "StackSize": 67,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8int16(v4int32)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8int16::v8int16(chessllvmInternal, v16int8)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4float(v2cint32)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write(int __protect_access AS22*, int, uint1_t, int __protect_access AS22*)",
            "StackSize": 10,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write128(int __protect_access AS12*, v4int32, uint1_t, v4int32)",
            "StackSize": 22,
            "SoftFloat": false
        },
        {
            "FunctionName": "v4int32::v4int32(chessllvmInternal, v16int8)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::vector()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_v(int, v4float)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 8u>::type aie::detail::vector_cast_helper<cint32, 8u, v16float const&>(v16float const&)",
            "StackSize": 268,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_w(int, v8float)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8float(v4cint32)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8cint32()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 16u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v16float()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v8cint32(v16float)",
            "StackSize": 200,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8cint32::v8cint32(chessllvmInternal, v64int8)",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write(int __protect_access AS10*, int, uint1_t, int __protect_access AS10*)",
            "StackSize": 10,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<short, 8u>::cast_to<float>() const",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::vector()",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 4u>::type aie::detail::vector_cast_helper<float, 4u, v8int16 const&>(v8int16 const&)",
            "StackSize": 76,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 4u>::undef()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4float(v8int16)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v4float()",
            "StackSize": 16,
            "SoftFloat": false
        },
        {
            "FunctionName": "v4float::v4float(chessllvmInternal, v16int8)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<(aie_stream_resource_out)0>(output_stream<float>*, v4float, bool)",
            "StackSize": 180,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_v(v8float, int)",
            "StackSize": 52,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector<float, 8u>::cast_to<cint32>() const",
            "StackSize": 248,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 8u> aie::detail::vector<cint32, 4u>::grow<8u>(unsigned int) const",
            "StackSize": 336,
            "SoftFloat": false
        },
        {
            "FunctionName": "shuffle8(v8cint32, int, unsigned int)",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_v(v8cint32, int)",
            "StackSize": 84,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 4u>::type aie::detail::vector_cast_helper<float, 4u, v2cint32>(v2cint32&&)",
            "StackSize": 76,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 4u>::vector(v4float)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "void stream_utils::aie_stream_put_wms<short>(output_stream<short>*, v8int16, bool&)",
            "StackSize": 122,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_wms(int, v8int16, int)",
            "StackSize": 98,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4int32(v8int16)",
            "StackSize": 56,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_wms(int, v4int32, int)",
            "StackSize": 58,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write128(int __protect_access AS23*, v4int32, uint1_t, v4int32)",
            "StackSize": 22,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write128(int __protect_access AS24*, v4int32, uint1_t, v4int32)",
            "StackSize": 22,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<cint32, 4u>::vector()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 4u>::type aie::detail::vector_cast_helper<cint32, 4u, v8float const&>(v8float const&)",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "xset_w(int, v4cint32)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<cint32, 4u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "as_v4cint32(v8float)",
            "StackSize": 104,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v4cint32()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "v4cint32::v4cint32(chessllvmInternal, v32int8)",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::add_reduce_bits_impl<32u, float, 8u>::run(aie::detail::vector<float, 8u> const&)",
            "StackSize": 1148,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> aie::detail::add_reduce_v_bits<32u, float, 8u>::run<aie::detail::vector<float, 8u> const&>(aie::detail::vector<float, 8u> const&)",
            "StackSize": 1112,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u>::get(unsigned int) const",
            "StackSize": 44,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 8u> const& std::__2::forward<aie::detail::vector<float, 8u> const&>(std::__2::remove_reference<aie::detail::vector<float, 8u> const&>::type&)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::add_reduce_v_bits_impl<32u, float, 8u, 1u>::run(aie::detail::vector<float, 8u> const&)",
            "StackSize": 1076,
            "SoftFloat": false
        },
        {
            "FunctionName": "ext_elem(v8float, unsigned int)",
            "StackSize": 36,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::operator v16float() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "fpadd(v8float, v16float, int, unsigned int)",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector<float, 16u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_ms(int, int, int)",
            "StackSize": 34,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::stream_write(int __protect_access AS21*, int, uint1_t, int __protect_access AS21*)",
            "StackSize": 10,
            "SoftFloat": false
        }
    ]
}