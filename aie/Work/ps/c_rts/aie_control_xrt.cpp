/********************************************* Disclaimer *********************************************/
/* This file is generated by aiecompiler 2022.2. */
/* Changes to this file may cause incorrect behavior and will be lost if aiecompiler is invoked again.*/

#include <iostream>
#include "adf/adf_api/AIEControlConfig.h"


/************************** Graph Configurations  *****************************/

  adf::GraphConfig GraphConfigurations[] = {
  //{id, name, graphLoadElfFunc, graphInitFunc, graphDebugHalt, coreColumns, coreRows, iterMemColumns, iterMemRows, iterMemAddrs, triggered, plKernelInstanceNames, plAxiLiteModes, plDriverStartFuncs, plDriverCheckIPDoneFuncs}
    {0, "aie_graph", nullptr, nullptr, nullptr, {22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}, {22, 23, 22, 23, 24, 24, 25, 26, 26, 26, 27, 27}, {0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 1, 0}, {0x4004, 0x4, 0x4, 0x4, 0x6004, 0x4004, 0x4, 0x4004, 0x4, 0x2004, 0x4, 0x4}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}, {}, {}, {},  }, 
  };
  const int NUM_GRAPH = 1;

/************************** PLIO Configurations  *****************************/

  adf::PLIOConfig PLIOConfigurations[] = {
  //{id, name, loginal_name, shim_column, slaveOrMaster, streamId}
    {0, "aie_graph.joint_histo[0]", "joint_histo_0", 26, 0, 5},
    {1, "aie_graph.joint_histo[1]", "joint_histo_1", 25, 0, 4},
    {2, "aie_graph.joint_histo[2]", "joint_histo_2", 22, 0, 0},
    {3, "aie_graph.joint_histo[3]", "joint_histo_3", 23, 0, 0},
    {4, "aie_graph.joint_histo[4]", "joint_histo_4", 27, 0, 1},
    {5, "aie_graph.joint_histo[5]", "joint_histo_5", 26, 0, 6},
    {6, "aie_graph.joint_histo[6]", "joint_histo_6", 22, 0, 6},
    {7, "aie_graph.joint_histo[7]", "joint_histo_7", 24, 0, 5},
    {8, "aie_graph.marginal_histo", "marginal_histo", 27, 0, 6},
    {9, "aie_graph.out_1", "out_plio_1", 24, 1, 4},
  };
  const int NUM_PLIO = 10;


/************************** ADF API initializer *****************************/

  class InitializeAIEControlXRT
  {
  public:
    InitializeAIEControlXRT()
    {
      std::cout<<"Initializing ADF API..."<<std::endl;
#ifdef __EXCLUDE_PL_CONTROL__
      bool exclude_pl_control = true;
#else
      bool exclude_pl_control = false;
#endif
      adf::initializeConfigurations(nullptr, 0, 0, 0,
                                    GraphConfigurations, NUM_GRAPH,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    PLIOConfigurations, NUM_PLIO,
                                    nullptr, 0, 0, nullptr,
                                    false, exclude_pl_control, false, nullptr,
                                    true, 2);

    }
  } initAIEControlXRT;



#if !defined(__CDO__)

// Kernel Stub Definition
  void entropy_vec_kernel_function(input_stream<int> *,output_stream<float> *) { /* Stub */ } 
  void entropy_vec_pass_kernel_function(input_stream<int> *,input_stream<float> *,output_stream<float> *) { /* Stub */ } 
  void marginal_entropy_kernel_function(input_stream<int> *,output_stream<float> *) { /* Stub */ } 
  void reduce_kernel_function(input_stream<float> *,input_stream<float> *,output_stream<float> *) { /* Stub */ } 
  void reduce_vec_kernel_function(input_stream<float> *,input_stream<float> *,output_stream<float> *) { /* Stub */ } 
#endif
