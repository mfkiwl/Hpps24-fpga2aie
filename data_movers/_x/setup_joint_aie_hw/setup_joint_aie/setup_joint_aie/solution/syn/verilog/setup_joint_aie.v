// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="setup_joint_aie_setup_joint_aie,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvc1902-vsvd1760-2MP-e-S,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=8275,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5925,HLS_SYN_LUT=7171,HLS_VERSION=2022_2_2}" *)

module setup_joint_aie (
        ap_clk,
        ap_rst_n,
        event_done,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        s_0_TDATA,
        s_0_TVALID,
        s_0_TREADY,
        s_1_TDATA,
        s_1_TVALID,
        s_1_TREADY,
        s_2_TDATA,
        s_2_TVALID,
        s_2_TREADY,
        s_3_TDATA,
        s_3_TVALID,
        s_3_TREADY,
        s_4_TDATA,
        s_4_TVALID,
        s_4_TREADY,
        s_5_TDATA,
        s_5_TVALID,
        s_5_TREADY,
        s_6_TDATA,
        s_6_TVALID,
        s_6_TREADY,
        s_7_TDATA,
        s_7_TVALID,
        s_7_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        event_start,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 256;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (256 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   event_done;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output  [31:0] s_0_TDATA;
output   s_0_TVALID;
input   s_0_TREADY;
output  [31:0] s_1_TDATA;
output   s_1_TVALID;
input   s_1_TREADY;
output  [31:0] s_2_TDATA;
output   s_2_TVALID;
input   s_2_TREADY;
output  [31:0] s_3_TDATA;
output   s_3_TVALID;
input   s_3_TREADY;
output  [31:0] s_4_TDATA;
output   s_4_TVALID;
input   s_4_TREADY;
output  [31:0] s_5_TDATA;
output   s_5_TVALID;
input   s_5_TREADY;
output  [31:0] s_6_TDATA;
output   s_6_TVALID;
input   s_6_TREADY;
output  [31:0] s_7_TDATA;
output   s_7_TVALID;
input   s_7_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   event_start;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] image_size;
wire   [63:0] histogram_rows;
reg    s_0_TDATA_blk_n;
wire    ap_CS_fsm_state2;
reg    s_1_TDATA_blk_n;
reg    s_2_TDATA_blk_n;
reg    s_3_TDATA_blk_n;
reg    s_4_TDATA_blk_n;
reg    s_5_TDATA_blk_n;
reg    s_6_TDATA_blk_n;
reg    s_7_TDATA_blk_n;
reg   [63:0] histogram_rows_read_reg_191;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_done;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_idle;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_ready;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWVALID;
wire   [63:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWADDR;
wire   [0:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWLEN;
wire   [2:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWBURST;
wire   [1:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWPROT;
wire   [3:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWQOS;
wire   [3:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWREGION;
wire   [0:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWUSER;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WVALID;
wire   [255:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WDATA;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WSTRB;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WLAST;
wire   [0:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WID;
wire   [0:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WUSER;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARVALID;
wire   [63:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARADDR;
wire   [0:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARLEN;
wire   [2:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARBURST;
wire   [1:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARPROT;
wire   [3:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARQOS;
wire   [3:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARREGION;
wire   [0:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARUSER;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_RREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_BREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TREADY;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TREADY;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TVALID;
wire   [31:0] grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TDATA;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TVALID;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_ext_blocking_n;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_str_blocking_n;
wire    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_int_blocking_n;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [255:0] gmem0_RDATA;
wire   [8:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
reg    grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    ap_block_state1;
reg    ap_block_state1_io;
reg    ap_block_state2;
reg    ap_block_state2_io;
wire    ap_CS_fsm_state5;
wire    regslice_both_s_0_U_apdone_blk;
wire    regslice_both_s_1_U_apdone_blk;
wire    regslice_both_s_2_U_apdone_blk;
wire    regslice_both_s_3_U_apdone_blk;
wire    regslice_both_s_4_U_apdone_blk;
wire    regslice_both_s_5_U_apdone_blk;
wire    regslice_both_s_6_U_apdone_blk;
wire    regslice_both_s_7_U_apdone_blk;
reg    ap_block_state5;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_str_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;
reg   [31:0] s_0_TDATA_int_regslice;
reg    s_0_TVALID_int_regslice;
wire    s_0_TREADY_int_regslice;
wire    regslice_both_s_0_U_vld_out;
reg   [31:0] s_1_TDATA_int_regslice;
reg    s_1_TVALID_int_regslice;
wire    s_1_TREADY_int_regslice;
wire    regslice_both_s_1_U_vld_out;
reg   [31:0] s_2_TDATA_int_regslice;
reg    s_2_TVALID_int_regslice;
wire    s_2_TREADY_int_regslice;
wire    regslice_both_s_2_U_vld_out;
reg   [31:0] s_3_TDATA_int_regslice;
reg    s_3_TVALID_int_regslice;
wire    s_3_TREADY_int_regslice;
wire    regslice_both_s_3_U_vld_out;
reg   [31:0] s_4_TDATA_int_regslice;
reg    s_4_TVALID_int_regslice;
wire    s_4_TREADY_int_regslice;
wire    regslice_both_s_4_U_vld_out;
reg   [31:0] s_5_TDATA_int_regslice;
reg    s_5_TVALID_int_regslice;
wire    s_5_TREADY_int_regslice;
wire    regslice_both_s_5_U_vld_out;
reg   [31:0] s_6_TDATA_int_regslice;
reg    s_6_TVALID_int_regslice;
wire    s_6_TREADY_int_regslice;
wire    regslice_both_s_6_U_vld_out;
reg   [31:0] s_7_TDATA_int_regslice;
reg    s_7_TVALID_int_regslice;
wire    s_7_TREADY_int_regslice;
wire    regslice_both_s_7_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start_reg = 1'b0;
end

setup_joint_aie_setup_joint_aie_Pipeline_VITIS_LOOP_68_1 grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start),
    .ap_done(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_done),
    .ap_idle(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_idle),
    .ap_ready(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_ready),
    .m_axi_gmem0_AWVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(gmem0_RDATA),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .s_0_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TREADY),
    .s_1_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TREADY),
    .s_2_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TREADY),
    .s_3_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TREADY),
    .s_4_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TREADY),
    .s_5_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TREADY),
    .s_6_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TREADY),
    .s_7_TREADY(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TREADY),
    .histogram_rows(histogram_rows_read_reg_191),
    .s_0_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TDATA),
    .s_0_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TVALID),
    .s_1_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TDATA),
    .s_1_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TVALID),
    .s_2_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TDATA),
    .s_2_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TVALID),
    .s_3_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TDATA),
    .s_3_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TVALID),
    .s_4_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TDATA),
    .s_4_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TVALID),
    .s_5_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TDATA),
    .s_5_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TVALID),
    .s_6_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TDATA),
    .s_6_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TVALID),
    .s_7_TDATA(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TDATA),
    .s_7_TVALID(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TVALID),
    .ap_ext_blocking_n(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_str_blocking_n),
    .ap_int_blocking_n(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_int_blocking_n)
);

setup_joint_aie_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .image_size(image_size),
    .histogram_rows(histogram_rows),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

setup_joint_aie_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 256 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARADDR),
    .I_ARLEN(grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARLEN),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(256'd0),
    .I_WSTRB(32'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_0_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_0_TDATA_int_regslice),
    .vld_in(s_0_TVALID_int_regslice),
    .ack_in(s_0_TREADY_int_regslice),
    .data_out(s_0_TDATA),
    .vld_out(regslice_both_s_0_U_vld_out),
    .ack_out(s_0_TREADY),
    .apdone_blk(regslice_both_s_0_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_1_TDATA_int_regslice),
    .vld_in(s_1_TVALID_int_regslice),
    .ack_in(s_1_TREADY_int_regslice),
    .data_out(s_1_TDATA),
    .vld_out(regslice_both_s_1_U_vld_out),
    .ack_out(s_1_TREADY),
    .apdone_blk(regslice_both_s_1_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_2_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_2_TDATA_int_regslice),
    .vld_in(s_2_TVALID_int_regslice),
    .ack_in(s_2_TREADY_int_regslice),
    .data_out(s_2_TDATA),
    .vld_out(regslice_both_s_2_U_vld_out),
    .ack_out(s_2_TREADY),
    .apdone_blk(regslice_both_s_2_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_3_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_3_TDATA_int_regslice),
    .vld_in(s_3_TVALID_int_regslice),
    .ack_in(s_3_TREADY_int_regslice),
    .data_out(s_3_TDATA),
    .vld_out(regslice_both_s_3_U_vld_out),
    .ack_out(s_3_TREADY),
    .apdone_blk(regslice_both_s_3_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_4_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_4_TDATA_int_regslice),
    .vld_in(s_4_TVALID_int_regslice),
    .ack_in(s_4_TREADY_int_regslice),
    .data_out(s_4_TDATA),
    .vld_out(regslice_both_s_4_U_vld_out),
    .ack_out(s_4_TREADY),
    .apdone_blk(regslice_both_s_4_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_5_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_5_TDATA_int_regslice),
    .vld_in(s_5_TVALID_int_regslice),
    .ack_in(s_5_TREADY_int_regslice),
    .data_out(s_5_TDATA),
    .vld_out(regslice_both_s_5_U_vld_out),
    .ack_out(s_5_TREADY),
    .apdone_blk(regslice_both_s_5_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_6_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_6_TDATA_int_regslice),
    .vld_in(s_6_TVALID_int_regslice),
    .ack_in(s_6_TREADY_int_regslice),
    .data_out(s_6_TDATA),
    .vld_out(regslice_both_s_6_U_vld_out),
    .ack_out(s_6_TREADY),
    .apdone_blk(regslice_both_s_6_U_apdone_blk)
);

setup_joint_aie_regslice_both #(
    .DataWidth( 32 ))
regslice_both_s_7_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_7_TDATA_int_regslice),
    .vld_in(s_7_TVALID_int_regslice),
    .ack_in(s_7_TREADY_int_regslice),
    .data_out(s_7_TDATA),
    .vld_out(regslice_both_s_7_U_vld_out),
    .ack_out(s_7_TREADY),
    .apdone_blk(regslice_both_s_7_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_s_7_U_apdone_blk == 1'b1) | (regslice_both_s_6_U_apdone_blk == 1'b1) | (regslice_both_s_5_U_apdone_blk == 1'b1) | (regslice_both_s_4_U_apdone_blk == 1'b1) | (regslice_both_s_3_U_apdone_blk == 1'b1) | (regslice_both_s_2_U_apdone_blk == 1'b1) | (regslice_both_s_1_U_apdone_blk == 1'b1) | (regslice_both_s_0_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start_reg <= 1'b1;
        end else if ((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_ready == 1'b1)) begin
            grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_int_blocking_n_reg <= ap_int_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    ap_str_blocking_n_reg <= ap_str_blocking_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        histogram_rows_read_reg_191 <= histogram_rows;
    end
end

always @ (*) begin
    if (((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_io))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_s_7_U_apdone_blk == 1'b1) | (regslice_both_s_6_U_apdone_blk == 1'b1) | (regslice_both_s_5_U_apdone_blk == 1'b1) | (regslice_both_s_4_U_apdone_blk == 1'b1) | (regslice_both_s_3_U_apdone_blk == 1'b1) | (regslice_both_s_2_U_apdone_blk == 1'b1) | (regslice_both_s_1_U_apdone_blk == 1'b1) | (regslice_both_s_0_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_s_7_U_apdone_blk == 1'b1) | (regslice_both_s_6_U_apdone_blk == 1'b1) | (regslice_both_s_5_U_apdone_blk == 1'b1) | (regslice_both_s_4_U_apdone_blk == 1'b1) | (regslice_both_s_3_U_apdone_blk == 1'b1) | (regslice_both_s_2_U_apdone_blk == 1'b1) | (regslice_both_s_1_U_apdone_blk == 1'b1) | (regslice_both_s_0_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1)) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1)) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regslice_both_s_7_U_apdone_blk == 1'b1) | (regslice_both_s_6_U_apdone_blk == 1'b1) | (regslice_both_s_5_U_apdone_blk == 1'b1) | (regslice_both_s_4_U_apdone_blk == 1'b1) | (regslice_both_s_3_U_apdone_blk == 1'b1) | (regslice_both_s_2_U_apdone_blk == 1'b1) | (regslice_both_s_1_U_apdone_blk == 1'b1) | (regslice_both_s_0_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1)) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state4 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_ARVALID = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_ARVALID;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_RREADY = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_m_axi_gmem0_RREADY;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_0_TDATA_blk_n = s_0_TREADY_int_regslice;
    end else begin
        s_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_0_TDATA_int_regslice = image_size;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TVALID == 1'b1))) begin
        s_0_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TDATA;
    end else begin
        s_0_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_0_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_0_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TVALID;
    end else begin
        s_0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_1_TDATA_blk_n = s_1_TREADY_int_regslice;
    end else begin
        s_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_1_TDATA_int_regslice = image_size;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TVALID == 1'b1))) begin
        s_1_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TDATA;
    end else begin
        s_1_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_1_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_1_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TVALID;
    end else begin
        s_1_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_2_TDATA_blk_n = s_2_TREADY_int_regslice;
    end else begin
        s_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_2_TDATA_int_regslice = image_size;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TVALID == 1'b1))) begin
        s_2_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TDATA;
    end else begin
        s_2_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_2_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_2_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TVALID;
    end else begin
        s_2_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_3_TDATA_blk_n = s_3_TREADY_int_regslice;
    end else begin
        s_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_3_TDATA_int_regslice = image_size;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TVALID == 1'b1))) begin
        s_3_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TDATA;
    end else begin
        s_3_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_3_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_3_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TVALID;
    end else begin
        s_3_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_4_TDATA_blk_n = s_4_TREADY_int_regslice;
    end else begin
        s_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_4_TDATA_int_regslice = image_size;
    end else if (((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        s_4_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TDATA;
    end else begin
        s_4_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_4_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_4_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TVALID;
    end else begin
        s_4_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_5_TDATA_blk_n = s_5_TREADY_int_regslice;
    end else begin
        s_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_5_TDATA_int_regslice = image_size;
    end else if (((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        s_5_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TDATA;
    end else begin
        s_5_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_5_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_5_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TVALID;
    end else begin
        s_5_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_6_TDATA_blk_n = s_6_TREADY_int_regslice;
    end else begin
        s_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_6_TDATA_int_regslice = image_size;
    end else if (((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        s_6_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TDATA;
    end else begin
        s_6_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_6_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_6_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TVALID;
    end else begin
        s_6_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        s_7_TDATA_blk_n = s_7_TREADY_int_regslice;
    end else begin
        s_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_7_TDATA_int_regslice = image_size;
    end else if (((grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        s_7_TDATA_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TDATA;
    end else begin
        s_7_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_7_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_7_TVALID_int_regslice = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TVALID;
    end else begin
        s_7_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b1) & (ap_ext_blocking_n == 1'b0))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b1) & (ap_int_blocking_n == 1'b0))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b1) & (ap_str_blocking_n == 1'b0))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_io)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((regslice_both_s_7_U_apdone_blk == 1'b1) | (regslice_both_s_6_U_apdone_blk == 1'b1) | (regslice_both_s_5_U_apdone_blk == 1'b1) | (regslice_both_s_4_U_apdone_blk == 1'b1) | (regslice_both_s_3_U_apdone_blk == 1'b1) | (regslice_both_s_2_U_apdone_blk == 1'b1) | (regslice_both_s_1_U_apdone_blk == 1'b1) | (regslice_both_s_0_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_io = ((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((s_7_TREADY_int_regslice == 1'b0) | (s_6_TREADY_int_regslice == 1'b0) | (s_5_TREADY_int_regslice == 1'b0) | (s_4_TREADY_int_regslice == 1'b0) | (s_3_TREADY_int_regslice == 1'b0) | (s_2_TREADY_int_regslice == 1'b0) | (s_1_TREADY_int_regslice == 1'b0) | (s_0_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((regslice_both_s_7_U_apdone_blk == 1'b1) | (regslice_both_s_6_U_apdone_blk == 1'b1) | (regslice_both_s_5_U_apdone_blk == 1'b1) | (regslice_both_s_4_U_apdone_blk == 1'b1) | (regslice_both_s_3_U_apdone_blk == 1'b1) | (regslice_both_s_2_U_apdone_blk == 1'b1) | (regslice_both_s_1_U_apdone_blk == 1'b1) | (regslice_both_s_0_U_apdone_blk == 1'b1));
end

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_str_blocking_cur_n = (s_7_TDATA_blk_n & s_6_TDATA_blk_n & s_5_TDATA_blk_n & s_4_TDATA_blk_n & s_3_TDATA_blk_n & s_2_TDATA_blk_n & s_1_TDATA_blk_n & s_0_TDATA_blk_n);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & ap_str_blocking_cur_n);

assign event_done = ap_done;

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start = grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_ap_start_reg;

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_0_TREADY = (s_0_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_1_TREADY = (s_1_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_2_TREADY = (s_2_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_3_TREADY = (s_3_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_4_TREADY = (s_4_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_5_TREADY = (s_5_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_6_TREADY = (s_6_TREADY_int_regslice & ap_CS_fsm_state4);

assign grp_setup_joint_aie_Pipeline_VITIS_LOOP_68_1_fu_156_s_7_TREADY = (s_7_TREADY_int_regslice & ap_CS_fsm_state4);

assign s_0_TVALID = regslice_both_s_0_U_vld_out;

assign s_1_TVALID = regslice_both_s_1_U_vld_out;

assign s_2_TVALID = regslice_both_s_2_U_vld_out;

assign s_3_TVALID = regslice_both_s_3_U_vld_out;

assign s_4_TVALID = regslice_both_s_4_U_vld_out;

assign s_5_TVALID = regslice_both_s_5_U_vld_out;

assign s_6_TVALID = regslice_both_s_6_U_vld_out;

assign s_7_TVALID = regslice_both_s_7_U_vld_out;

endmodule //setup_joint_aie
